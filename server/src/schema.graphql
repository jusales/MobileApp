# import * from "./generated/prisma.graphql"

type Query {
  me: User!
  questionnaire: [Question]!
  questionTexts(language: LanguageWhereInput!): [QuestionText]!
  questionOptions(data: [QuestionOptionsWhereInput]!): [QuestionOptions]!
}

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  createQuestionText(text: String!, language: String!, questionID: ID!, questionType: QuestionTypeCreateOneInput): QuestionText!
  createQuestionOptions(options: [String!]!, QuestionTypeID: ID!, QuestionID: ID!, language: String): [QuestionOptions!]!
  # createQuestion(description: String, type: QuestionType!): Question!
  # createQuestionType(description: String!): QuestionType!
  # questionText(questionID: ID!, text: String!, language: Language!): QuestionText!
  # create a mutation for creating a question with text
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
  name: String!
}
